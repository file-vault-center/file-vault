version: '3.8'

services:
  # Frontend application
  file-vault-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: file-vault-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_TUS_ENDPOINT=https://tusd.tusdemo.net/files/
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - file-vault-network

  # Development service (optional)
  file-vault-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: file-vault-dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    profiles:
      - dev
    networks:
      - file-vault-network

  # Nginx reverse proxy (optional)
  nginx-proxy:
    image: nginx:alpine
    container_name: file-vault-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - file-vault-app
    restart: unless-stopped
    profiles:
      - production
    networks:
      - file-vault-network

networks:
  file-vault-network:
    driver: bridge

volumes:
  node_modules: 